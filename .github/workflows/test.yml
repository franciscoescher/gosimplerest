name: Run tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  ci:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Prepares database
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
      - run: >
          mysql -uroot -h127.0.0.1 << "EOF"
            CREATE DATABASE IF NOT EXISTS test_database;
            USE test_database;
            DROP TABLE IF EXISTS `users`;
            CREATE TABLE `users_test` (
              `uuid` varchar(191) NOT NULL,
              `created_at` datetime(3) DEFAULT NULL,
              `deleted_at` datetime(3) DEFAULT NULL,
              `first_name` varchar(255) DEFAULT NULL,
              `phone` varchar(255) DEFAULT NULL,
              PRIMARY KEY (`uuid`)
            );
            CREATE TABLE `rent_events_test` (
              `uuid` varchar(191) NOT NULL,
              `created_at` datetime(3) DEFAULT NULL,
              `deleted_at` datetime(3) DEFAULT NULL,
              `user_id` varchar(128) DEFAULT NULL,
              `starting_time` datetime(3) DEFAULT NULL,
              `hours` int DEFAULT NULL,
              PRIMARY KEY (`uuid`),
              KEY `fk_rent_events_test_user` (`user_id`),
              CONSTRAINT `fk_rent_events_test_user` FOREIGN KEY (`user_id`) REFERENCES `users_test` (`uuid`) ON DELETE CASCADE
            );

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./main.go

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout 3m --verbose

          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

      - name: Run tests
        run: DB_USER_TEST=root DB_HOSTNAME_TEST=127.0.0.1 DB_PORT_TEST=3306 DB_SCHEMA_TEST=test_database go test ./... -cover
